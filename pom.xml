<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.rrzcp8</groupId>
  <artifactId>noxus</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>noxus</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <docker.image.prefix>springio</docker.image.prefix>
  </properties>
  
  <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.1.RELEASE</version>
    </parent>
    
    <!--  <repositories>    
        <repository>    
            <id>spring-snapshots</id>    
            <url>http://repo.spring.io/snapshot</url>    
            <snapshots><enabled>true</enabled></snapshots>    
        </repository>    
        <repository>    
            <id>spring-milestones</id>    
            <url>http://repo.spring.io/milestone</url>    
        </repository>    
    </repositories>    
    <pluginRepositories>    
        <pluginRepository>    
            <id>spring-snapshots</id>    
            <url>http://repo.spring.io/snapshot</url>    
        </pluginRepository>    
        <pluginRepository>    
            <id>spring-milestones</id>    
            <url>http://repo.spring.io/milestone</url>    
        </pluginRepository>    
    </pluginRepositories>  -->

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
	<dependency>  
	    <groupId>org.springframework.boot</groupId>  
	    <artifactId>spring-boot-starter-test</artifactId>  
	    <scope>test</scope>  
	</dependency>  
	<dependency>  
	    <groupId>org.springframework.boot</groupId>  
	    <artifactId>spring-boot-starter-web</artifactId>  
	</dependency>  
	<dependency>  
	    <groupId>org.springframework.hateoas</groupId>  
	    <artifactId>spring-hateoas</artifactId>  
	</dependency>  
	<dependency>  
	    <groupId>org.springframework.boot</groupId>  
	    <artifactId>spring-boot-starter-actuator</artifactId>  
	</dependency>  
    <dependency>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>
		<version>14.0.1</version>
	</dependency>
	<!--
      devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），
      实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
      即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的
    -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- mybatis -->
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>1.1.1</version>
    </dependency>
    <!-- mybatis 分页插件 -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>4.1.6</version>
    </dependency>
    <!--mysql-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.26</version>
    </dependency>
    <!--druid-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.0.20</version>
    </dependency>
    
    <dependency>
    	<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>2.6</version>
    </dependency>

    <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-configuration-processor</artifactId>
    	<optional>true</optional>
    </dependency>
	
  </dependencies>
  
  <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
				   <artifactId>maven-compiler-plugin</artifactId>
				   <configuration>
			      <source>1.8</source>
			      <target>1.8</target>
			   </configuration>
			</plugin>
			<plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>0.2.3</version>
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>target</dockerDirectory>
	                <resources>
	                    <resource>
<!-- 	                        <targetPath>/</targetPath>
 -->	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
        	</plugin>
        </plugins>
    </build>
</project>
